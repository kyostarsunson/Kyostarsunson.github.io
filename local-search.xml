<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Some stuff about Node.js</title>
    <link href="/2023/02/26/Some-stuff-about-Node-js/"/>
    <url>/2023/02/26/Some-stuff-about-Node-js/</url>
    
    <content type="html"><![CDATA[<p><img src="/./img/1200px-Node.js_logo.svg.png"></p><h1 id="The-background"><a href="#The-background" class="headerlink" title="The background"></a>The background</h1><p>In the last of 2000, Ryan Dahl, one of the software engineers develop it. At that time, all web server is like Apache or IIS. It is difficult for software developers to create a website because always needs plenty of technology, which we call technology stack. In most of the case in those years, the front engineer knows the language JAVASCRIPT and HTML but they can’t use them to build the function running on the server. This method is what we call a kind of heavyweight approach. So under this situation and with the hope to be better to accomplish the development work, he develops node.js.</p><h1 id="What-is-Node-js"><a href="#What-is-Node-js" class="headerlink" title="What is Node.js"></a>What is Node.js</h1><p>As a result of this original purpose and design idea，node.js is designed to run in the server and provider a better easy management solution to build this website server instead of using the complicated specific website server application. And it is not a kind of framework, is not a library of software as well. It is the running environment of JavaScript. A little like the compilation environment of JAVA. This environment makes JavaScript can run on the server and makes JAVASCRIPT the ability to provide functionality like other languages like C#, JAVA, and PYTHON in the website area. Besides these, Node.js is based on the Chrome V8 JavaScript engine. It is EVEN-DRIVEN, and no blocked I&#x2F;O model. What is that means, we will discuss on the next page.</p><h1 id="The-History-of-node-js"><a href="#The-History-of-node-js" class="headerlink" title="The History of node.js"></a>The History of node.js</h1><p>Feb 2009, Ryan Dahl announce his plan that he will prepare and release a lightweight web server kit.</p><p>In May 2009, Ryan Dahl released in GitHub the first version of Node, and in the last months, some developers start to use it to develop.</p><p>At the end of 2010, Node gets the fund of Joyent, so he begins to develop it as a full-time job.<br>In July 2011, Node released a Windows version with the help of Microsoft.<br>2016, Yarn is born.<br>2021, Node.js 17 release.</p><h1 id="Some-terms-or-concept"><a href="#Some-terms-or-concept" class="headerlink" title="Some terms or concept:"></a>Some terms or concept:</h1><p>Serverless<br>This is what we get the response to, it means that once we deploy this kind of service, we don’t need to deploy the server first, such as the node.js. So if we are going to deploy the node.js, we can deploy it in any response machine, that is call function point or FAAS, function as a service. Nowadays, often be deployed in the cloud environment.</p><h1 id="The-benefit"><a href="#The-benefit" class="headerlink" title="The benefit"></a>The benefit</h1><p>Based on the foundation of Chrome V8 engineer technology. The development time of Using JavaScript to code firmly decreases and this always leads to cost save incredibly. Because the high-performance requirement is the key point for Node. It is dependent on the even drive method and it is using this benefit to develop a high extension server. Node.js is using event loop architect and it always makes extension more easy and safe. Node chooses a way that not only improves the performance and decreases the difficulties, but it is also one of the special features of Node.js.</p><p>The second benefit is the non-blocked libraries. By comparing another language, when node.js visit the file system, the database system, it doesn’t wait until the resource response. The none-block will notify Node.js when it gets ready. So it is a little like doing like in the event ONMOUSEMOVE and HTML DOM, which the JavaScript engineers are always familiar with.<br>The community of NodeJS is essential. The base of the maturity of the community provides lots of libraries and modules. For example, some library is including lots of functions like databases and others software connect drivers. All this reduces the time spend on it.</p><h1 id="What-some-application-use-the-node-js-technology"><a href="#What-some-application-use-the-node-js-technology" class="headerlink" title="What some application use the node.js technology?"></a>What some application use the node.js technology?</h1><ol><li>Uber.</li><li>Paypal</li><li>LinkedIn</li></ol><h1 id="How-to-make-a-first-node"><a href="#How-to-make-a-first-node" class="headerlink" title="How to make a first node"></a>How to make a first node</h1><ol><li><p>Install Node.js<br>There are several ways to easily install Node.js, use package manager tools like npm, or you can just go to the website here, or directly download Node.js to setup.</p></li><li><p>How to use node.<br>If you are on a windows platform, just find the Node.js icon and run it. It is obvious that you can in here use your javascript to code. If you are in Linux or Mac environment, run the node , than you can enter the node.js interact interface。<br>Try to run this:</p></li></ol><p><img src="/.%5Cimg%5C12.png"></p><pre><code class="hljs">You can get the answer 3 just like this.Your coding is running correctly. And you can use Ctrl-D to log out the environment.The second way it more popular is, you are support to write a JS coding in a separate file, such like  abc.js. And use node abc.js to compile and run it.</code></pre><ol><li>Develop Your first web server by using node.js.<br>How to using node.js to build your first website like HELLO WORLD rather than setting a apacha or nginx server. You just need use this following coding.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>)<br><span class="hljs-keyword">const</span> hostname = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span><br><span class="hljs-keyword">const</span> port = <span class="hljs-number">4000</span><br><br><span class="hljs-keyword">const</span> server = http.<span class="hljs-title function_">createServer</span>(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;  <br>    res.<span class="hljs-property">statusCode</span> = <span class="hljs-number">200</span>  <br>    res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;text/plain&#x27;</span>)  <br>    res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&#x27;Hello World, Hello Sait student!\n&#x27;</span>)<br>&#125;)<br><br>server.<span class="hljs-title function_">listen</span>(port, hostname, <span class="hljs-function">() =&gt;</span> &#123;  <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server running at http://<span class="hljs-subst">$&#123;hostname&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>/`</span>)<br>&#125;)<br><br></code></pre></td></tr></table></figure><pre><code class="hljs">And when you open your website, you can see the website is established as follow.</code></pre><ol start="4"><li><p>How to quit node.js program</p><p> Temerita Nods.js<br> In the console, use key ctrl-c close.<br> In the program, process.exit() to terminal by force.<br> That means all the waiting which are looking for the retracement are going to the terminal will be terminated, such as the network response, and any of the filesystem access.<br> Or you can transfer the parament such as process.exit(1) to wait for the OS response and exit.</p></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">process.exitCode</span> = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>It will wait for all the waiting finish and Node.js will exist this code.</p><h1 id="At-the-end"><a href="#At-the-end" class="headerlink" title="At the end"></a>At the end</h1><p>The node.js gives us a new kind of way to consider how to solve a problem and are not legalistic. With the help of that, just try and run your first node.js and show your ability to solve different problems.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nodejs</title>
    <link href="/2023/02/26/Let%20talk%20something%20about%20nodejs/"/>
    <url>/2023/02/26/Let%20talk%20something%20about%20nodejs/</url>
    
    <content type="html"><![CDATA[<h1 id="The-background"><a href="#The-background" class="headerlink" title="The background"></a>The background</h1><p>In the last of 2000, Ryan Dahl, one of the software engineers develop it. At that time, all web server is like Apache or IIS. It is difficult for software developers to create a website because always needs plenty of technology, which we call technology stack. In most of the case in those years, the front engineer knows the language JAVASCRIPT and HTML but they can’t use them to build the function running on the server. This method is what we call a kind of heavyweight approach. So under this situation and with the hope to be better to accomplish the development work, he develops node.js.</p><h1 id="What-is-Node-js"><a href="#What-is-Node-js" class="headerlink" title="What is Node.js"></a>What is Node.js</h1><p>As a result of this original purpose and design idea，node.js is designed to run in the server and provider a better easy management solution to build this website server instead of using the complicated specific website server application. And it is not a kind of framework, is not a library of software as well. It is the running environment of JavaScript. A little like the compilation environment of JAVA. This environment makes JavaScript can run on the server and makes JAVASCRIPT the ability to provide functionality like other languages like C#, JAVA, and PYTHON in the website area. Besides these, Node.js is based on the Chrome V8 JavaScript engine. It is EVEN-DRIVEN, and no blocked I&#x2F;O model. What is that means, we will discuss on the next page.</p><h1 id="The-History-of-node-js"><a href="#The-History-of-node-js" class="headerlink" title="The History of node.js"></a>The History of node.js</h1><p>Feb 2009, Ryan Dahl announce his plan that he will prepare and release a lightweight web server kit.</p><p>In May 2009, Ryan Dahl released in GitHub the first version of Node, and in the last months, some developers start to use it to develop.</p><p>At the end of 2010, Node gets the fund of Joyent, so he begins to develop it as a full-time job.<br>In July 2011, Node released a Windows version with the help of Microsoft.<br>2016, Yarn is born.<br>2021, Node.js 17 release.</p><h1 id="Some-terms-or-concept"><a href="#Some-terms-or-concept" class="headerlink" title="Some terms or concept:"></a>Some terms or concept:</h1><p>Serverless<br>This is what we get the response to, it means that once we deploy this kind of service, we don’t need to deploy the server first, such as the node.js. So if we are going to deploy the node.js, we can deploy it in any response machine, that is call function point or FAAS, function as a service. Nowadays, often be deployed in the cloud environment.</p><h1 id="The-benefit"><a href="#The-benefit" class="headerlink" title="The benefit"></a>The benefit</h1><p>Based on the foundation of Chrome V8 engineer technology. The development time of Using JavaScript to code firmly decreases and this always leads to cost save incredibly. Because the high-performance requirement is the key point for Node. It is dependent on the even drive method and it is using this benefit to develop a high extension server. Node.js is using event loop architect and it always makes extension more easy and safe. Node chooses a way that not only improves the performance and decreases the difficulties, but it is also one of the special features of Node.js.</p><p>The second benefit is the non-blocked libraries. By comparing another language, when node.js visit the file system, the database system, it doesn’t wait until the resource response. The none-block will notify Node.js when it gets ready. So it is a little like doing like in the event ONMOUSEMOVE and HTML DOM, which the JavaScript engineers are always familiar with.<br>The community of NodeJS is essential. The base of the maturity of the community provides lots of libraries and modules. For example, some library is including lots of functions like databases and others software connect drivers. All this reduces the time spend on it.</p><h1 id="What-some-application-use-the-node-js-technology"><a href="#What-some-application-use-the-node-js-technology" class="headerlink" title="What some application use the node.js technology?"></a>What some application use the node.js technology?</h1><ol><li>Uber.</li><li>Paypal</li><li></li></ol><p></p><h1 id="How-to-make-a-first-node"><a href="#How-to-make-a-first-node" class="headerlink" title="How to make a first node"></a>How to make a first node</h1><ol><li><p>Install Node.js<br>There are several ways to easily install Node.js, use package manager tools like npm, or you can just go to the website here, or directly download Node.js to setup.</p></li><li><p>How to use node.<br>If you are on a windows platform, just find the Node.js icon and run it. It is obvious that you can in here use your javascript to code. If you are in Linux or Mac environment, run the node , than you can enter the node.js interact interface。<br>Try to run this:</p><p> 1+2</p><p> You can get the answer 3 just like this.<br> Your coding is running correctly. And you can use Ctrl-D to log out the environment.</p><p> The second way it more popular is, you are support to write a JS coding in a separate file, such like  abc.js.<br> And use node abc.js to compile and run it.</p></li><li><p>Develop Your first web server by using node.js.<br>How to using node.js to build your first website like HELLO WORLD rather than setting a apacha or nginx server. You just need use this following coding.</p><p> const http &#x3D; require(‘http’)<br> const hostname &#x3D; ‘127.0.0.1’<br> const port &#x3D; 4000</p><p> const server &#x3D; http.createServer((req, res) &#x3D;&gt; {<br> res.statusCode &#x3D; 200<br> res.setHeader(‘Content-Type’, ‘text&#x2F;plain’)<br> res.end(‘Hello World, Hello Sait student!\n’)<br> })</p><p> server.listen(port, hostname, () &#x3D;&gt; {<br> console.log(<code>Server running at http://$&#123;hostname&#125;:$&#123;port&#125;/</code>)<br> })</p></li><li><p>How to quit node.js program</p><p> Temerita Nods.js<br> In the console, use key ctrl-c close.<br> In the program, process.exit() to terminal by force.<br> That means all the waiting which are looking for the retracement are going to the terminal will be terminated, such as the network response, and any of the filesystem access.<br> Or you can transfer the parament such as process.exit(1) to wait for the OS response and exit.</p><p> process.exitCode &#x3D; 1</p><p> It will wait for all the waiting finish and Node.js will exist this code.</p></li><li><p>At the end<br>The node.js gives us a new kind of way to consider how to solve a problem and are not legalistic. With the help of that, just try and run your first node.js and show your ability to solve different problems.</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/26/hello-world/"/>
    <url>/2023/02/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
